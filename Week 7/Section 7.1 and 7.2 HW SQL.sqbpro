<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/fredv/coding/SavvyCoders/dap-curriculum/Section07/Resources/SavvyCoders_SQL_EVtables.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2026"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,10:mainEVCharging"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="EVCharging" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="8" mode="0"/></sort><column_widths><column index="1" value="78"/><column index="2" value="75"/><column index="3" value="60"/><column index="4" value="129"/><column index="5" value="129"/><column index="6" value="79"/><column index="7" value="70"/><column index="8" value="113"/><column index="9" value="120"/><column index="10" value="75"/><column index="11" value="72"/><column index="12" value="74"/><column index="13" value="63"/><column index="14" value="76"/><column index="15" value="81"/><column index="16" value="91"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="EVRegistry" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="7" mode="0"/></sort><column_widths><column index="1" value="92"/><column index="2" value="125"/><column index="3" value="119"/><column index="4" value="53"/><column index="5" value="89"/><column index="6" value="86"/><column index="7" value="104"/><column index="8" value="115"/><column index="9" value="220"/><column index="10" value="105"/><column index="11" value="84"/><column index="12" value="67"/></column_widths><filter_values><column index="7" value="che"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="7.1 HW ">-- 1. Using EVregistry, Write a query to select the ModelYear, Make, and Model off all of the vehicles in the registry.


SELECT ModelYear, Make, Model
FROM EVRegistry

-- 2. Using the EVRegistry table, Write a query that lists all of the unique types of EV's. your reult set should have one column, ElectricVehicleType.

SELECT DISTINCT ElectricVehicleType
from EVRegistry

-- 3. Using the EVRegistry, Write a query that shows all of the information on Battery Electric Vehicles (BEV) that are in the registry.

SELECT DISTINCT ElectricVehicleType, count(*)
from EVRegistry
WHERE ElectricVehicleType in (&quot;Battery Electric Vehicle (BEV)&quot;)

-- 4. Using the EVRegistry, wirte a query that returns the Make and Model of all of the EV's that have a BaseMSRP between 20000 and 35000?

SELECT Model, Make, BaseMSRP
FROM EVRegistry
WHERE BaseMSRP between 20000 and 35000
</sql><sql name="7.2 HW">-- 1. Using EVRegistry, write a query to find a record where the City attribute is NULL. Return all of the available columns.

SELECT *
FROM EVRegistry
WHERE City is NULL;

-- 2. Write a query to find the make, model, and ElectricVehicleType where the VIN number has that ends in '3E1EA1J'.

SELECT Make, Model, ElectricVehicleType, VIN
FROM EVRegistry
WHERE VIN like &quot;%3E1EA1J&quot;


-- 3. Select the ModelYear, make, model, ElectricVehicleType, and range of the Tesla vehicles or cheverolet vehicles in the registry. 
-- Order the result set by Make and Model year in from newest to oldest.

SELECT ModelYear, Make, Model, ElectricVehicleType, ElectricRange
FROM EVRegistry
WHERE Make = &quot;TESLA&quot; or Make = &quot;CHEVROLET&quot;
ORDER by 1 DESC

-- 4. Using EVCharging, Write a query to find out how many many times those stations were used. 
-- Order them by the most used to the least used and limit the output to 5 records.

SELECT 
	DISTINCT stationId, 
	count(userId) as &quot;stations used&quot;
FROM EVCharging
GROUP by stationId
ORDER by 2 
limit 5

-- 5. Using EVCharging, For the folks who charged longer than 0.5 hours, show the min and max of the charging time for each user. 
-- Your output columns should be userid, minTime, and maxTime. Order this result set by the last two columns respectively.

SELECT 
	userId,
-- 	sum(chargeTimeHrs) + round(sum(chargeTimeMins) / 60) as &quot;hours charged&quot;,
	min(chargeTimeHrs) as &quot;min hours&quot;,
	max(chargeTimeHrs) as &quot;max hours&quot;,
	count(*) as &quot;charging sessions&quot;
FROM EVCharging
WHERE chargeTimeHrs &gt; 0.5
GROUP by userId
ORDER by 2, 3</sql><current_tab id="1"/></tab_sql></sqlb_project>
